// Conversion from old font encodings to Adlam Unicode.
var adlamCaseOffset = 0x22;  // Amount to add to get lower case from upper.
var firstAdlamUpper = 0x1e900;
var lastAdlamUpper = 0x1e921;

var minAdlamU = String.fromCodePoint(firstAdlamUpper);
var maxAdlamU = String.fromCodePoint(lastAdlamUpper);

var adlam_Latin_to_unicode_map = {
  'A': String.fromCodePoint(0x1e900),
  'a': String.fromCodePoint(0x1e922),
  'AA': String.fromCodePoint(0x1e900) + String.fromCodePoint(0x1e944),
  'Aa': String.fromCodePoint(0x1e900) + String.fromCodePoint(0x1e944),
  'aa': String.fromCodePoint(0x1e922) + String.fromCodePoint(0x1e944),
  'aA': String.fromCodePoint(0x1e922) + String.fromCodePoint(0x1e944),

  'B': String.fromCodePoint(0x1e904),
  'b': String.fromCodePoint(0x1e926),
  'BB': String.fromCodePoint(0x1e904) + String.fromCodePoint(0x1E946),
  'Bb': String.fromCodePoint(0x1e904) + String.fromCodePoint(0x1E946),
  'bb': String.fromCodePoint(0x1e926) + String.fromCodePoint(0x1E946),
  'bB': String.fromCodePoint(0x1e926) + String.fromCodePoint(0x1E946),

  'C': String.fromCodePoint(0x1e915),
  'c': String.fromCodePoint(0x1e937),
  'CC': String.fromCodePoint(0x1e915) + String.fromCodePoint(0x1E946),
  'Cc': String.fromCodePoint(0x1e915) + String.fromCodePoint(0x1E946),
  'cc': String.fromCodePoint(0x1e937) + String.fromCodePoint(0x1E946),
  'cC': String.fromCodePoint(0x1e937) + String.fromCodePoint(0x1E946),

  'D': String.fromCodePoint(0x1e901),
  'd': String.fromCodePoint(0x1e923),
  'DD': String.fromCodePoint(0x1e901) + String.fromCodePoint(0x1E946),
  'Dd': String.fromCodePoint(0x1e901) + String.fromCodePoint(0x1E946),
  'dd': String.fromCodePoint(0x1e923) + String.fromCodePoint(0x1E946),
  'dD': String.fromCodePoint(0x1e923) + String.fromCodePoint(0x1E946),

  'dj': 'û§∂',
  'dJ': 'û§∂',
  'Dj': 'û§î',
  'DJ': 'û§î',
  'dy': 'û§∂',
  'dY': 'û§∂',
  'Dy': 'û§î',
  'DY': 'û§î',

  'E': String.fromCodePoint(0x1e909),
  'e': String.fromCodePoint(0x1e92b),
  'EE': String.fromCodePoint(0x1e909) + String.fromCodePoint(0x1e945),
  'Ee': String.fromCodePoint(0x1e909) + String.fromCodePoint(0x1e945),
  'ee': String.fromCodePoint(0x1e92b) + String.fromCodePoint(0x1e945),
  'eE': String.fromCodePoint(0x1e92b) + String.fromCodePoint(0x1e945),

  '√®': 'û§´',
  '√©': 'û§´',
  '√à': 'û§â',
  '√â': 'û§â',

  '√™': 'û§´û•Ö',
  '√´': 'û§´û•Ö',
  '√ä': 'û§âû•Ö',
  '√ã': 'û§âû•Ö',

  '√Æ': 'û§≠û•Ö',
  '√é': 'û§ãû•Ö',
  '√Ø': 'û§≠û•Ö',
  '√è': 'û§ãû•Ö',

  '√¥': 'û§Æ',
  '√î': 'û§å',
  '√∂': 'û§Æ',
  '√ñ': 'û§å',

  '√ª': 'û§µû•Ö',
  '√õ': 'û§ìû•Ö',

  '√¢': 'û§¢',
  '√Ç': 'û§Ä',
  
  'F': String.fromCodePoint(0x1e90a),
  'f': String.fromCodePoint(0x1e92c),
  'FF': String.fromCodePoint(0x1e90a) + String.fromCodePoint(0x1E946),
  'Ff': String.fromCodePoint(0x1e90a) + String.fromCodePoint(0x1E946),
  'ff': String.fromCodePoint(0x1e92c) + String.fromCodePoint(0x1E946),
  'fF': String.fromCodePoint(0x1e92c) + String.fromCodePoint(0x1E946),

  'G': String.fromCodePoint(0x1e918),
  'g': String.fromCodePoint(0x1e93a),
  'GG': String.fromCodePoint(0x1e918) + String.fromCodePoint(0x1E946),
  'Gg': String.fromCodePoint(0x1e918) + String.fromCodePoint(0x1E946),
  'gg': String.fromCodePoint(0x1e93a) + String.fromCodePoint(0x1E946),
  'gG': String.fromCodePoint(0x1e93a) + String.fromCodePoint(0x1E946),

  'GN': String.fromCodePoint(0x1e918),
  'Gn': String.fromCodePoint(0x1e918),
  'gn': String.fromCodePoint(0x1e93a),
  'gN': String.fromCodePoint(0x1e93a),

  'H': String.fromCodePoint(0x1e916),
  'h': String.fromCodePoint(0x1e938),
  'HH': String.fromCodePoint(0x1e916) + String.fromCodePoint(0x1E946),
  'Hh': String.fromCodePoint(0x1e916) + String.fromCodePoint(0x1E946),
  'hh': String.fromCodePoint(0x1e938) + String.fromCodePoint(0x1E946),
  'hH': String.fromCodePoint(0x1e938) + String.fromCodePoint(0x1E946),

  'I': String.fromCodePoint(0x1e90b),
  'i': String.fromCodePoint(0x1e92d),
  'II': String.fromCodePoint(0x1e90b) + String.fromCodePoint(0x1e945),
  'Ii': String.fromCodePoint(0x1e90b) + String.fromCodePoint(0x1e945),
  'ii': String.fromCodePoint(0x1e92d) + String.fromCodePoint(0x1e945),
  'iI': String.fromCodePoint(0x1e92d) + String.fromCodePoint(0x1e945),

  'J': String.fromCodePoint(0x1e914),
  'j': String.fromCodePoint(0x1e936),
  'JJ': String.fromCodePoint(0x1e914) + String.fromCodePoint(0x1E946),
  'Jj': String.fromCodePoint(0x1e914) + String.fromCodePoint(0x1E946),
  'jj': String.fromCodePoint(0x1e936) + String.fromCodePoint(0x1E946),
  'jj': String.fromCodePoint(0x1e936) + String.fromCodePoint(0x1E946),

  'K': String.fromCodePoint(0x1e911),
  'k': String.fromCodePoint(0x1e933),
  'KK': String.fromCodePoint(0x1e911) + String.fromCodePoint(0x1E946),
  'Kk': String.fromCodePoint(0x1e911) + String.fromCodePoint(0x1E946),
  'kk': String.fromCodePoint(0x1e933) + String.fromCodePoint(0x1E946),
  'kK': String.fromCodePoint(0x1e933) + String.fromCodePoint(0x1E946),

  'L': String.fromCodePoint(0x1e902),
  'l': String.fromCodePoint(0x1e924),
  'LL': String.fromCodePoint(0x1e902) + String.fromCodePoint(0x1E946),
  'Ll': String.fromCodePoint(0x1e902) + String.fromCodePoint(0x1E946),
  'll': String.fromCodePoint(0x1e924) + String.fromCodePoint(0x1E946),
  'lL': String.fromCodePoint(0x1e924) + String.fromCodePoint(0x1E946),

  'M': String.fromCodePoint(0x1e903),
  'm': String.fromCodePoint(0x1e925),
  'MM': String.fromCodePoint(0x1e903) + String.fromCodePoint(0x1E946),
  'Mm': String.fromCodePoint(0x1e903) + String.fromCodePoint(0x1E946),
  'mm': String.fromCodePoint(0x1e925) + String.fromCodePoint(0x1E946),
  'mM': String.fromCodePoint(0x1e925) + String.fromCodePoint(0x1E946),
  ' MB': String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  ' Mb': String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  ' mb': String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1E926),
  ' mB': String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1E926),
  '\u000aMB': "\u000a" + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  '\u000aMb': "\u000a" + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  '\u00a0mb': "\u000a" + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1E926),
  '\u000amB': "\u000a" + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1E926),

  'N': String.fromCodePoint(0x1e910),
  'n': String.fromCodePoint(0x1e932),
  'NN': String.fromCodePoint(0x1e910) + String.fromCodePoint(0x1E946),
  'Nn': String.fromCodePoint(0x1e910) + String.fromCodePoint(0x1E946),
  'nn': String.fromCodePoint(0x1e932) + String.fromCodePoint(0x1E946),
  'nN': String.fromCodePoint(0x1e932) + String.fromCodePoint(0x1E946),

  'NB': + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  'Nb': + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  'nb': String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e926),
  'nB': String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e926),
  ' NB': " " + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  '\u000aNB': "\u000a" + String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e904),
  ' Nb': " "+ String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e926),
  '\u000aNb': "\u000a" +String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e926),
  ' nb':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e926),
  '\u000anb':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e926),
  ' nB':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e926),
  '\u000anB':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e926),

  'ND':  String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e901),
  'nD':  String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e901),
  'Nd':  String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e923),
  'nd':  String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e923),
  ' ND':  " "+ String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e901),
  ' nD':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e901),
  ' Nd':  " "+ String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e923),
  ' nd':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e923),
  '\u000aND':  "\u000a" +String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e901),
  '\u000anD':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e901),
  '\u000aNd':  "\u000a" +String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e923),
  '\u000and':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e923),

  'NG':  String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e918),
  'nG':  String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e918),
  'Ng':  String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e93a),
  'ng':  String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e93a),
  ' NG':  " "+ String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e918),
  ' nG':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e918),
  ' Ng':  " "+ String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e93a),
  ' ng':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e93a),
  '\u000aNG':  "\u000a" +String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e918),
  '\u000anG':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e918),
  '\u000aNg':  "\u000a" +String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e93a),
  '\u000ang':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e93a),

  'NJ': String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e914),
  'nJ': String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e914),
  'Nj': String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e936),
  'nj': String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e936),
  ' NJ':  " "+ String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e914),
  ' nJ':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e914),
  ' Nj':  " "+ String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e936),
  ' nj':  " "+ String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e936),
  '\u000aNJ':  "\u000a" +String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e914),
  '\u000anJ':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e914),
  '\u000aNj':  "\u000a" +String.fromCodePoint(0x1e910) + "\'" + String.fromCodePoint(0x1e936),
  '\u000anj':  "\u000a" +String.fromCodePoint(0x1e932) + "\'" + String.fromCodePoint(0x1e936),

  'O': String.fromCodePoint(0x1e90c),
  'o': String.fromCodePoint(0x1e92e),
  'OO': String.fromCodePoint(0x1e90c) + String.fromCodePoint(0x1e945),
  'Oo': String.fromCodePoint(0x1e90c) + String.fromCodePoint(0x1e945),
  'oo': String.fromCodePoint(0x1e92e) + String.fromCodePoint(0x1e945),
  'oO': String.fromCodePoint(0x1e92e) + String.fromCodePoint(0x1e945),

  'P': String.fromCodePoint(0x1e906),
  'p': String.fromCodePoint(0x1e928),
  'PP': String.fromCodePoint(0x1e906) + String.fromCodePoint(0x1E946),
  'Pp': String.fromCodePoint(0x1e906) + String.fromCodePoint(0x1E946),
  'pp': String.fromCodePoint(0x1e928) + String.fromCodePoint(0x1E946),
  'pP': String.fromCodePoint(0x1e928) + String.fromCodePoint(0x1E946),

  'Q': String.fromCodePoint(0x1e919),
  'q': String.fromCodePoint(0x1e93b),
  'QQ': String.fromCodePoint(0x1e919) + String.fromCodePoint(0x1E946),
  'Qq': String.fromCodePoint(0x1e919) + String.fromCodePoint(0x1E946),
  'qq': String.fromCodePoint(0x1e93b) + String.fromCodePoint(0x1E946),
  'qQ': String.fromCodePoint(0x1e93b) + String.fromCodePoint(0x1E946),

  'R': String.fromCodePoint(0x1e908),
  'r': String.fromCodePoint(0x1e92a),
  'RR': String.fromCodePoint(0x1e908) + String.fromCodePoint(0x1E946),
  'Rr': String.fromCodePoint(0x1e908) + String.fromCodePoint(0x1E946),
  'rr': String.fromCodePoint(0x1e92a) + String.fromCodePoint(0x1E946),
  'rR': String.fromCodePoint(0x1e92a) + String.fromCodePoint(0x1E946),

  'S': String.fromCodePoint(0x1e905),
  's': String.fromCodePoint(0x1e927),
  'SS': String.fromCodePoint(0x1e905) + String.fromCodePoint(0x1E946),
  'Ss': String.fromCodePoint(0x1e905) + String.fromCodePoint(0x1E946),
  'ss': String.fromCodePoint(0x1e927) + String.fromCodePoint(0x1E946),
  'sS': String.fromCodePoint(0x1e927) + String.fromCodePoint(0x1E946),

  'T': String.fromCodePoint(0x1e91a),
  't': String.fromCodePoint(0x1e93c),
  'TT': String.fromCodePoint(0x1e91a) + String.fromCodePoint(0x1E946),
  'Tt': String.fromCodePoint(0x1e91a) + String.fromCodePoint(0x1E946),
  'tt': String.fromCodePoint(0x1e93c) + String.fromCodePoint(0x1E946),
  'tT': String.fromCodePoint(0x1e93c) + String.fromCodePoint(0x1E946),

  'TY': String.fromCodePoint(0x1e915),
  'Ty': String.fromCodePoint(0x1e915),
  'ty': String.fromCodePoint(0x1e937),
  'tY': String.fromCodePoint(0x1e937),

  'U': String.fromCodePoint(0x1e913),
  'u': String.fromCodePoint(0x1e935),
  'UU': String.fromCodePoint(0x1e913) + String.fromCodePoint(0x1e945),
  'Uu': String.fromCodePoint(0x1e913) + String.fromCodePoint(0x1e945),
  'uu': String.fromCodePoint(0x1e935) + String.fromCodePoint(0x1e945),
  'uU': String.fromCodePoint(0x1e935) + String.fromCodePoint(0x1e945),

  'V': String.fromCodePoint(0x1e91c),
  'v': String.fromCodePoint(0x1e93e),
  'VV': String.fromCodePoint(0x1e91c) + String.fromCodePoint(0x1E946),
  'Vv': String.fromCodePoint(0x1e91c) + String.fromCodePoint(0x1E946),
  'vv': String.fromCodePoint(0x1e93e) + String.fromCodePoint(0x1E946),
  'vV': String.fromCodePoint(0x1e93e) + String.fromCodePoint(0x1E946),

  'W': String.fromCodePoint(0x1e90F),
  'w': String.fromCodePoint(0x1e931),
  'WW': String.fromCodePoint(0x1e90F) + String.fromCodePoint(0x1E946),
  'Ww': String.fromCodePoint(0x1e90F) + String.fromCodePoint(0x1E946),
  'ww': String.fromCodePoint(0x1e931) + String.fromCodePoint(0x1E946),
  'wW': String.fromCodePoint(0x1e931) + String.fromCodePoint(0x1E946),

  'Y': String.fromCodePoint(0x1e912),
  'y': String.fromCodePoint(0x1e934),
  'YY': String.fromCodePoint(0x1e912) + String.fromCodePoint(0x1E946),
  'Yy': String.fromCodePoint(0x1e912) + String.fromCodePoint(0x1E946),
  'yy': String.fromCodePoint(0x1e934) + String.fromCodePoint(0x1E946),
  'yY': String.fromCodePoint(0x1e934) + String.fromCodePoint(0x1E946),

  'Z': String.fromCodePoint(0x1e91f),
  'z': String.fromCodePoint(0x1e941),
  'ZZ': String.fromCodePoint(0x1e91f) + String.fromCodePoint(0x1E946),
  'Zz': String.fromCodePoint(0x1e91f) + String.fromCodePoint(0x1E946),
  'zz': String.fromCodePoint(0x1e941) + String.fromCodePoint(0x1E946),
  'zZ': String.fromCodePoint(0x1e941) + String.fromCodePoint(0x1E946),

  'BH': String.fromCodePoint(0x1e907),
  'Bh': String.fromCodePoint(0x1e907),
  'bh': String.fromCodePoint(0x1e929),
  '∆Å':  String.fromCodePoint(0x1e907),
  '∆Å∆Å': String.fromCodePoint(0x1e907) + String.fromCodePoint(0x1E946),
  '…ì':  String.fromCodePoint(0x1e929),
  '…ì…ì': String.fromCodePoint(0x1e929) + String.fromCodePoint(0x1E946),
  
  'DH': String.fromCodePoint(0x1e90d),
  'Dh': String.fromCodePoint(0x1e90d),
  'dh': String.fromCodePoint(0x1e92f),
  'dH': String.fromCodePoint(0x1e92f),
  'D\u0309': String.fromCodePoint(0x1e90d),
  '∆ä':  String.fromCodePoint(0x1e90d),
  '∆ä∆ä': String.fromCodePoint(0x1e90d) + String.fromCodePoint(0x1E946),
  '∆ä…ó': String.fromCodePoint(0x1e90d) + String.fromCodePoint(0x1E946),
  'd\u0309':  String.fromCodePoint(0x1e92f),
  '…ó':  String.fromCodePoint(0x1e92f),
  '…ó…ó':  String.fromCodePoint(0x1e92f) + String.fromCodePoint(0x1E946),
  '…ó∆ä':  String.fromCodePoint(0x1e92f) + String.fromCodePoint(0x1E946),

  'YH': String.fromCodePoint(0x1e90e),
  'Yh': String.fromCodePoint(0x1e90e),
  'yh': String.fromCodePoint(0x1e930),
  'yH': String.fromCodePoint(0x1e930),
  '∆≥':  String.fromCodePoint(0x1e90e),
  'Y\u0309': String.fromCodePoint(0x1e90e),
  '∆≥∆≥': String.fromCodePoint(0x1e90e) + String.fromCodePoint(0x1E946),
  '∆≥y': String.fromCodePoint(0x1e90e) + String.fromCodePoint(0x1E946),
  '∆¥':  String.fromCodePoint(0x1e930),
  'y\u0309':  String.fromCodePoint(0x1e930),
  '∆¥∆¥':  String.fromCodePoint(0x1e930) + String.fromCodePoint(0x1E946),
  '∆¥∆≥':  String.fromCodePoint(0x1e930) + String.fromCodePoint(0x1E946),

  'QH': String.fromCodePoint(0x1e917),
  'Qh': String.fromCodePoint(0x1e917),
  'qh': String.fromCodePoint(0x1e939),
  'qH': String.fromCodePoint(0x1e939),

  'NY': String.fromCodePoint(0x1e919),
  'Ny': String.fromCodePoint(0x1e919),
  '√ë': String.fromCodePoint(0x1e919),
  'N\u0303': String.fromCodePoint(0x1e919),  // Combining tilde
  'ny': String.fromCodePoint(0x1e93b),
  'nY': String.fromCodePoint(0x1e93b),
  '√±': String.fromCodePoint(0x1e93b),
  'n\u0303': String.fromCodePoint(0x1e93b),

  'NQ': String.fromCodePoint(0x1e91b),
  'Nq': String.fromCodePoint(0x1e91b),
  'nq': String.fromCodePoint(0x1e93d),
  'nQ': String.fromCodePoint(0x1e93d),

  'GH': String.fromCodePoint(0x1e91d),
  'Gh': String.fromCodePoint(0x1e91d),
  'gh': String.fromCodePoint(0x1e93f),
  'gH': String.fromCodePoint(0x1e93f),

  'GB': String.fromCodePoint(0x1e91e),
  'Gb': String.fromCodePoint(0x1e91e),
  'gb': String.fromCodePoint(0x1e940),
  'gB': String.fromCodePoint(0x1e940),

  'KPA': String.fromCodePoint(0x1e920),
  'KPa': String.fromCodePoint(0x1e920),
  'Kpa': String.fromCodePoint(0x1e920),
  'kpa': String.fromCodePoint(0x1e942),

  'SHA': String.fromCodePoint(0x1e921),
  'SHa': String.fromCodePoint(0x1e921),
  'Sha': String.fromCodePoint(0x1e921),
  'sha': String.fromCodePoint(0x1e943),


   '\u019d' : String.fromCodePoint(0x1e919),
   '\u0272' : String.fromCodePoint(0x1e93b),

  // Digits
  '0': String.fromCodePoint(0x1e950),
  '1': String.fromCodePoint(0x1e951),
  '2': String.fromCodePoint(0x1e952),
  '3': String.fromCodePoint(0x1e953),
  '4': String.fromCodePoint(0x1e954),
  '5': String.fromCodePoint(0x1e955),
  '6': String.fromCodePoint(0x1e956),
  '7': String.fromCodePoint(0x1e957),
  '8': String.fromCodePoint(0x1e958),
  '9': String.fromCodePoint(0x1e959),
  
  // Punctuation
  '!': String.fromCodePoint(0x1e95e),
  '?': String.fromCodePoint(0x1e95f),
  ',': '\u060c',
  ';': '\u061b',
 
  // Special for return adding RTL marker
  '\u000a' : '\u000a\u202e',
};

// From Jogo Barry, 28-Jan-2019
var new_adlam_Latin_to_unicode_map = {
  'A': 'û§Ä',
  'a': 'û§¢',
  'AA': 'û§Äû•Ñ',
  'Aa': 'û§Äû•Ñ',
  'aa': 'û§¢û•Ñ',
  'B': 'û§Ñ',
  'b': 'û§¶',
  'BB': 'û§Ñû•Ü',
  'Bb': 'û§Ñû•Ü',
  'bb': 'û§¶û•Ü',
  '∆Å': 'û§á',
  '…ì': 'û§©',
  '∆Å∆Å': 'û§áû•Ü',
  '∆Å…ì': 'û§áû•Ü',
  '…ì∆Å': 'û§©û•Ü',
  '…ì…ì': 'û§©û•Ü',
  'BH': 'û§á',
  'Bh': 'û§á',
  'BBH': 'û§áû•Ü',
  'Bbh': 'û§áû•Ü',
  'bh': 'û§©',
  'bbh': 'û§©û•Ü',
  'C': 'û§ï',
  'c': 'û§∑',
  'CC': 'û§ïû•Ü',
  'Cc': 'û§ïû•Ü',
  'cc': 'û§∑û•Ü',
  'D': 'û§Å',
  'd': 'û§£',
  'DD': 'û§Åû•Ü',
  'Dd': 'û§Åû•Ü',
  'dd': 'û§£û•Ü',
  '∆ä': 'û§ç',
  '…ó': 'û§Ø',
  '∆ä∆ä': 'û§çû•Ü',
  '∆ä…ó': 'û§çû•Ü',
  '…ó…ó': 'û§Øû•Ü',
  'DH': 'û§ç',
  'dh': 'û§Ø',
  'DDH': 'û§çû•Ü',
  'Ddh': 'û§çû•Ü',
  'ddh': 'û§Øû•Ü',
  'E': 'û§â',
  'e': 'û§´',
  'EE': 'û§âû•Ö',
  'Ee': 'û§âû•Ö',
  'ee': 'û§´û•Ö',
  'F': 'û§ä',
  'f': 'û§¨',
  'FF': 'û§äû•Ü',
  'Ff': 'û§äû•Ü',
  'ff': 'û§¨û•Ü',
  'G': 'û§ò',
  'g': 'û§∫',
  'GG': 'û§òû•Ü',
  'Gg': 'û§òû•Ü',
  'gg': 'û§∫û•Ü',
  'GB': 'û§û',
  'gb': 'û•Ä',
  'GGB': 'û§ûû•Ü',
  'Ggb': 'û§ûû•Ü',
  'ggb': 'û•Äû•Ü',
  'H': 'û§ñ',
  'h': 'û§∏',
  'HH': 'û§ñû•Ü',
  'Hh': 'û§ñû•Ü',
  'hh': 'û§∏û•Ü',
  'I': 'û§ã',
  'i': 'û§≠',
  'II': 'û§ãû•Ö',
  'Ii': 'û§ãû•Ö',
  'ii': 'û§≠û•Ö',
  'J': 'û§î',
  'j': 'û§∂',
  'JJ': 'û§îû•Ü',
  'Jj': 'û§îû•Ü',
  'jj': 'û§∂û•Ü',
  'K': 'û§ë',
  'k': 'û§≥',
  'KK': 'û§ëû•Ü',
  'Kk': 'û§ëû•Ü',
  'kk': 'û§≥û•Ü',
  'KH': 'û§ù',
  'kh': 'û§ø',
  'KKH': 'û§ùû•Ü',
  'Kkh': 'û§ùû•Ü',
  'kkh': 'û§øû•Ü',
  'X': 'û§ù',
  'x': 'û§ø',
  'XX': 'û§ùû•Ü',
  'Xx': 'û§ùû•Ü',
  'xx': 'û§øû•Ü',
  'L': 'û§Ç',
  'l': 'û§§',
  'LL': 'û§Çû•Ü',
  'Ll': 'û§Çû•Ü',
  'll': 'û§§û•Ü',
  'M': 'û§É',
  'm': 'û§•',
  'MM': 'û§Éû•Ü',
  'Mm': 'û§Éû•Ü',
  'mm': 'û§•û•Ü',
  'N': 'û§ê',
  'n': 'û§≤',
  'NN': 'û§êû•Ü',
  'Nn': 'û§êû•Ü',
  'nn': 'û§≤û•Ü',
  '≈ä': 'û§õ',
  '≈ã': 'û§Ω',
  '≈ä≈ä': 'û§õû•Ü',
  '≈ä≈ã': 'û§õû•Ü',
  '≈ã≈ã': 'û§Ωû•Ü',
  'NH': 'û§õ',
  'nh': 'û§Ω',
  'NNH': 'û§õû•Ü',
  'Nnh': 'û§õû•Ü',
  'nnh': 'û§Ωû•Ü',
  '√ë': 'û§ô',
  '√±': 'û§ª',
  '√ë√ë': 'û§ôû•Ü',
  '√ë√±': 'û§ôû•Ü',
  '√±√±': 'û§ªû•Ü',
  'NY': 'û§ô',
  'ny': 'û§ª',
  'NNY': 'û§ôû•Ü',
  'Nny': 'û§ôû•Ü',
  'nny': 'û§ªû•Ü',
  'O': 'û§å',
  'o': 'û§Æ',
  'OO': 'û§åû•Ö',
  'Oo': 'û§åû•Ö',
  'oo': 'û§Æû•Ö',
  'P': 'û§Ü',
  'p': 'û§®',
  'PP': 'û§Üû•Ü',
  'Pp': 'û§Üû•Ü',
  'pp': 'û§®û•Ü',
  'KP': 'û§†',
  'kp': 'û•Ç',
  'KKP': 'û§†û•Ü',
  'Kkp': 'û§†û•Ü',
  'kkp': 'û•Çû•Ü',
  'Q': 'û§ó',
  'q': 'û§π',
  'QQ': 'û§óû•Ü',
  'Qq': 'û§óû•Ü',
  'qq': 'û§πû•Ü',
  'GH': 'û§ó',
  'gh': 'û§π',
  'GGH': 'û§óû•Ü',
  'Ggh': 'û§óû•Ü',
  'ggh': 'û§πû•Ü',
  'R': 'û§à',
  'r': 'û§™',
  'RR': 'û§àû•Ü',
  'Rr': 'û§àû•Ü',
  'rr': 'û§™û•Ü',
  'S': 'û§Ö',
  's': 'û§ß',
  'SS': 'û§Öû•Ü',
  'Ss': 'û§Öû•Ü',
  'ss': 'û§ßû•Ü',
  'SH': 'û§°',
  'Sh': 'û§°',
  'sh': 'û•É',
  'sH': 'û•É',
  'SSH': 'û§°û•Ü',
  'Ssh': 'û§°û•Ü',
  'ssh': 'û•Éû•Ü',
  'T': 'û§ö',
  't': 'û§º',
  'TT': 'û§öû•Ü',
  'Tt': 'û§öû•Ü',
  'tt': 'û§ºû•Ü',
  'U': 'û§ì',
  'u': 'û§µ',
  'UU': 'û§ìû•Ö',
  'Uu': 'û§ìû•Ö',
  'uu': 'û§µû•Ö',
  'V': 'û§ú',
  'v': 'û§æ',
  'VV': 'û§úû•Ü',
  'Vv': 'û§úû•Ü',
  'vv': 'û§æû•Ü',
  'W': 'û§è',
  'w': 'û§±',
  'WW': 'û§èû•Ü',
  'Ww': 'û§èû•Ü',
  'ww': 'û§±û•Ü',
  'Y': 'û§í',
  'y': 'û§¥',
  'YY': 'û§íû•Ü',
  'Yy': 'û§íû•Ü',
  'yy': 'û§¥û•Ü',
  '∆≥': 'û§é',
  '∆¥': 'û§∞',
  '∆≥∆≥': 'û§éû•Ü',
  '∆≥∆¥': 'û§éû•Ü',
  '∆¥∆¥': 'û§∞û•Ü',
  'YH': 'û§é',
  'yh': 'û§∞',
  'YYH': 'û§éû•Ü',
  'Yyh': 'û§éû•Ü',
  'yyh': 'û§∞û•Ü',
  'Z': 'û§ü',
  'z': 'û•Å',
  'ZZ': 'û§üû•Ü',
  'Zz': 'û§üû•Ü',
  'zz': 'û•Åû•Ü',
  'ND': "û§ê'û§Å",
  'Nd': "û§ê'û§Å",
  'nd': "û§≤'û§£",
  'MB': "û§ê'û§Ñ",
  'Mb': "û§ê'û§Ñ",
  'mb': "û§≤'û§¶",
  'NJ': "û§ê'û§î",
  'Nj': "û§ê'û§î",
  'nj': "û§≤'û§∂",
  'NG': "û§ê'û§ò",
  'Ng': "û§ê'û§ò",
  'ng': "û§≤'û§∫",
  'nnd': 'û§≤û§£',
  'mmb': 'û§•û§¶',
  'nnj': 'û§≤û§∂',
  'nng': 'û§≤û§∫',
  '0': 'û•ê',
  '1': 'û•ë',
  '2': 'û•í',
  '3': 'û•ì',
  '4': 'û•î',
  '5': 'û•ï',
  '6': 'û•ñ',
  '7': 'û•ó',
  '8': 'û•ò',
  '9': 'û•ô',
  '.': '.',
  ',': ',',
  '?': '\u061f',  // Arabic question mark
};

// Special punctuation.
/*
  '!': 'û•û',  // At start of sentence only
  '?': 'û•ü',  // At start of sentence only
*/

// To parse out combinations. Doubled letters and other combinations
var adlam_latin_chars =
    "bbh|ddh|ggb|ggh|kkh|kkp|mmb|nnd|nng|nnj|nnh|nny|ssh|yyh|" +
  "aa|bb|cc|dd|ee|ff|gg|hh|ii|jj|kk|ll|mm|nn|√±√±|oo|pp|qq|rr|ss|tt|uu|vv|ww|xx|yy|zz|" +
    "…ì…ì|…ó…ó|≈ã≈ã|∆¥∆¥|" +
    "bh|dj|dy|gn|mb|nd|ng|nj|nh|ny|sh|" +
    "j|√®|√©|√™|√´|√Ø|√Æ|√î|√∂|√ª|√¢|" +
//    "[\u000A\u0020]n[bdgj]|^n[bdgj]|[\u000A\u0020]mb|^mb" +  // To handle initial nb,nd,ng,nj with apostrophe
    "n\u0303|" + "[ydb]\u0309|" +
    "[bdgqy]h|g[bn]|kpa|ty|\u000a|" + ".";  // n[bdgjqy]


function replacePunctuation(match, textRun) {
    var match;
    switch (match[0]) {
    case '?':
    case '\u061F':
      replacement = 'û•ü ';
      break;
    case '!':
      replacement = 'û•û ';
      break;
    default:
    case '.':
      replacement = '';
      break;
    }
    return replacement + textRun + match;
};

function splitBySentence(text) {
  if (text.length == 0 || typeof text != 'string') {
     return text;
  }

  separators = /([.!?\u061F] )/g;
  // Insert Adlam exclamation and interrogative if needed, and reinsert the sentence endings.
  // Elements 1, 3, 5, etc. contain the split strings.
  var splits = text.split(separators);
  var index = 0;
  var sentences = [];
  while (index < splits.length -1) {
    sentences.push(replacePunctuation(splits[index+1], splits[index]));
    index += 2;
  }
  // Check for final question or exclamation
  var puncMatch = splits[index].match(/[.!?\u061F]/);
  if (puncMatch) {
    var position =puncMatch.index;
    var lastPart = splits[index].substr(position);
    sentences.push(replacePunctuation(lastPart, splits[index].substr(0, position)));
  } else {
    sentences.push(splits[index]);
  }
   return sentences;
};

function convertLatinToUnicode(textIn, toLower) {
  if (textIn.length == 0)
    return textIn;

  // Get the individual sentences.
  var sentences = splitBySentence(textIn);

  var textOut = "\u202e";

  for (var index in sentences){
  var parsedText = preParseAdlamLatin(sentences[index]);

  for (index = 0; index < parsedText.length; index ++) {
    var c = parsedText[index];
    var result = new_adlam_Latin_to_unicode_map[c];
    // var result = adlam_Latin_to_unicode_map[c];

    if (result === undefined) {
      result = c;
    }
    if (toLower && result >= minAdlamU && result <= maxAdlamU) {
      result = String.fromCodePoint(result.codePointAt(0) + adlamCaseOffset);
    }
    textOut += result;
  }
  }
  return textOut;
}

function preParseAdlamLatin(instring) {
  var regex1 = new RegExp(adlam_latin_chars, "gi");
  var outList = instring.match(regex1);
  return outList;
}

//------------------ TESTS ------------------
function testAllLatin() {
  var results = {};

  result = testDoubleVowels();
  results[result["name"]] = result;

  result = testDigits();
  results[result["name"]] = result;

  result = testDoubleConsonants();
  results[result["name"]] = result;

  var result = test1();
  results[result["name"]] = result;

  // TODO: Add more tests.

  return results;
}

function test1() {
  var text = "ADLAM BSP BH …ì REF IO DH …ó YH ∆¥ WHK YUJ TH C H QH G HY T NQ " +
    "V GH GB Z KPA KPa Kpa SHA SHa Shaadlam";
  var conv = convertLatinToUnicode(text, false);
  var expected = "\u202e" +
    "û§Äû§Åû§Çû§Äû§É û§Ñû§Öû§Ü û§á û§á û§àû§âû§ä û§ãû§å û§ç û§ç û§é û§∞ û§èû§ñû§ë " +
    "û§íû§ìû§î û§öû§ñ û§ï û§ñ û§ó û§ò û§ñû§í û§ö û§õ û§ú û§ù û§û û§ü û§† û§† û§† û§° û§°";
  return {"name": "text1",
          "pass": conv == expected,
          "actual": conv,
          "expected": expected};
}

function testDoubleConsonants() {
  var text = "BB bb DD dd LL ll PP pp TT tt ∆Å∆Å …ì…ì ∆ä∆ä …ó…ó ∆≥∆≥ ∆¥∆¥ ∆Å …ì ∆ä …ó ∆≥ ∆¥";
  var conv = convertLatinToUnicode(text, false);
  var expected = "\u202e" +
    String.fromCodePoint(0x1e904) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e926) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e901) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e923) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e902) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e924) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e906) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e928) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e91a) + String.fromCodePoint(0x1E946) + " " +
    String.fromCodePoint(0x1e93c) + String.fromCodePoint(0x1E946)
    // TODO: Finish
    ;
;
  return {"name": "testDoubleConsonants",
          "pass": conv == expected,
          "actual": conv,
          "expected": expected};
}

function testDoubleVowels() {
  var text = "AA aa EE ee II ii OO oo UU uu";
  var conv = convertLatinToUnicode(text, false);
  var expected = "\u202e" + 
    String.fromCodePoint(0x1e900) + String.fromCodePoint(0x1e944) + " " +
    String.fromCodePoint(0x1e922) + String.fromCodePoint(0x1e944) + " " +
    String.fromCodePoint(0x1e909) + String.fromCodePoint(0x1e945) + " " +
    String.fromCodePoint(0x1e92b) + String.fromCodePoint(0x1e945) + " " +
    String.fromCodePoint(0x1e90b) + String.fromCodePoint(0x1e945) + " " +
    String.fromCodePoint(0x1e92d) + String.fromCodePoint(0x1e945) + " " +
    String.fromCodePoint(0x1e90c) + String.fromCodePoint(0x1e945) + " " +
    String.fromCodePoint(0x1e92e) + String.fromCodePoint(0x1e945) + " " +
    String.fromCodePoint(0x1e913) + String.fromCodePoint(0x1e945) + " " +
    String.fromCodePoint(0x1e935) + String.fromCodePoint(0x1e945);
  return {"name": "testDoubleVowels",
          "pass": conv == expected,
          "actual": conv,
          "expected": expected};
}


function testDigits() {
  var text = "0123456789";
  var conv = convertLatinToUnicode(text, false);
  var expected = "\u202eû•êû•ëû•íû•ìû•îû•ïû•ñû•óû•òû•ô";
  return {"name": "testDigits",
          "pass": conv == expected,
          "actual": conv,
          "expected": expected};
}
